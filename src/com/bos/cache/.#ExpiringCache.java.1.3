/* Generated by Together */

package com.bos.cache;
import org.apache.log4j.Logger;
import java.util.Set;

/**
* defines the ExpiringCache interface, with basic functions for putting and getting
* data in and out of the cache and sizing the cache and methods for detecting
* when items have timedout or have been removed from the cache
**/
public interface ExpiringCache extends Cache {

    // define some callback notifications
    void onRemove(Object key,Object data);
    void onTimedOut(Object key,Object data);
    void setLogger(Logger log);
    void logCacheStats(String s);

    void start();

    /**
     * retrieves the current delay value
     * (how often to check for stale objects
     **/
    long getDelay();

    /**
     * retrieves the stale timeout
     * (how long before the object becomes stale
     **/
    long getStaleTimeout();

    /**
     * returns the set of keys
     * @return Set the set of keys for this cache
     **/
    Set keySet();

    /**
     * how often to print the status of the cache
     **/
    long getPrintTimeout();
}
