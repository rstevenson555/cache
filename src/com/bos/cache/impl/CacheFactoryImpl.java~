/* Generated by Together */

package com.bos.cache.impl;

import com.bos.cache.NonExpiringFactory;
import com.bos.cache.CacheFactory;
import com.bos.cache.Cache;
import com.bos.cache.ExpiringCache;

/**
* This is the factory used to create instances of the MRU(Most recently used) cache
* and the expiring cache
* To use first create an instance of the factory with newInstance, then create the
* cache from that instance
**/
public class CacheFactoryImpl extends CacheFactory {
    public static CacheFactory newInstance()
    {
        return new CacheFactoryImpl();
    }

    public Cache createMRUCache(){                  
        return new MRUCacheImpl (NonExpiringFactory.getInstance());
    }

    /**
     * creates a MRUCache with the size specified
     * @param size how many cache entries can be held, should be a <b>prime number</b>
     **/
    public Cache createMRUCache(int size){
        return new MRUCacheImpl (size,NonExpiringFactory.getInstance());
    }
 
    public Cache createExpiringMRUCache(int size, int expireSeconds){
        //return new ExpiringMRUCacheImpl(size, expireSeconds);
        return new MRUCacheImpl(size, expireSeconds,IdleExpiringFactory.getInstance());
    }

    public ExpiringCache createExpiringCache(String name,int _delay, int to,int ptime){
        return new ExpiringCacheImpl ( name, _delay,  to, ptime);
    }

    public ExpiringCache createExpiringCache(Runnable thread,String name,int _delay, int to,int ptime){
        return new ExpiringCacheImpl ( thread, name, _delay,  to, ptime);
    }

    
   

}
