<project name="cache" default="test" basedir=".">
    <property environment="env"/>
    <property name="projhome" value="${basedir}"/>
    <property name="platform" value="${projhome}/dist"/>

    <property name="lib.main.dir" value="${projhome}/lib"/>
	<property name="lib.test.dir" value="${projhome}/testsuitelib"/>
    <property name="src.main.dir" value="${projhome}/src" />
    <property name="src.test.dir" value="${projhome}/tests" />
	<property name="resources.main.dir" value="${platform}/resources" />
    <property name="resources.test.dir" value="${src.test.dir}/resources"/>
    <property name="classes.main.dir" value="${projhome}/dist/classes" />
    <property name="classes.test.dir" value="${projhome}/dist/test-classes" />
    <property name="classes.instrumented.dir" value="${basedir}/bin/instrumented-classes" />
    <property name="reports.dir" value="${projhome}/dist/reports" />


    <path id="classpath.main" description="Main classpath">
        <fileset dir="${lib.main.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="${projhome}" />
    </path>

    <path id="classpath.test" description="Test classpath">
        <fileset dir="${lib.test.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <!-- Cobertura Task Definition -->
    <taskdef resource="tasks.properties">
        <classpath refid="classpath.main" />
        <classpath refid="classpath.test" />
    </taskdef>

    <target name="init" description="Create initial directory structure required for build">
        <mkdir dir="${classes.main.dir}"/>
        <mkdir dir="${classes.test.dir}"/>
    	<mkdir dir="${classes.instrumented.dir}"/>

    	<mkdir dir="${reports.dir}"/>
    	<mkdir dir="${reports.dir}/test/xml"/>
    	<mkdir dir="${reports.dir}/coverage"/>
    </target>

    <target name="clean" description="Removes directories created just for build purpose">
        <delete dir="${classes.main.dir}"/>
        <delete dir="${classes.test.dir}"/>
    	<delete dir="${classes.instrumented.dir}"/>
        <delete dir="${reports.dir}"/>
    </target>

    <target name="compile.main" depends="clean, init" description="Compile main sources">
        <javac srcdir="${src.main.dir}"
        	   destdir="${classes.main.dir}"
        	   debug="on"
        	   debuglevel="lines,vars,source"
        	   optimize="off"
        	   deprecation="off">
            <classpath refid="classpath.main"/>
        </javac>

    	<copy todir="${classes.main.dir}">
            <fileset dir="${resources.main.dir}"/>
        </copy>
    </target>

    <target name="compile.test" depends="compile.main" description="Compile test sources">
        <javac srcdir="${src.test.dir}"
               destdir="${classes.test.dir}"
               debug="on"
               debuglevel="lines,vars,source"
               optimize="off"
               deprecation="off">
        	<classpath location="${classes.main.dir}" />
            <classpath refid="classpath.main"/>
            <classpath refid="classpath.test"/>
        </javac>
        <copy todir="${classes.test.dir}">
            <fileset dir="${resources.test.dir}" />
        </copy>
    </target>

    <target name="instrument" depends="compile.test">
        <delete file="${basedir}/cobertura.ser" />
        <cobertura-instrument todir="${classes.instrumented.dir}">
            <ignore regex="org.apache.log4j.*" />
            <fileset dir="${classes.main.dir}">
                <include name="**/*.class" />
                <exclude name="**/*Test.class" />
            </fileset>
        </cobertura-instrument>
    </target>

    <target name="test" depends="instrument" description="Runs jUnit tests and generates html report">
        <junit showoutput="yes"
        	   fork="yes"
        	   forkmode="once"
        	   dir="${basedir}"
        	   failureProperty="test.failed"
        	   haltonerror="off"
        	   printsummary="on">
            <!--
                Specify the name of the coverage data file to use.
                The value specified below is the default.
            -->
            <sysproperty key="net.sourceforge.cobertura.datafile" file="${basedir}/cobertura.ser" />

        	<!--
                The instrumented classes reference classes used by the
                Cobertura runtime, so Cobertura and its dependencies
                must be on your classpath.
            -->
        	<classpath location="${classes.test.dir}" />
        	<classpath location="${classes.instrumented.dir}" />
            <classpath location="${classes.main.dir}" />
        	<classpath refid="classpath.main" />
        	<classpath refid="classpath.test" />

            <formatter type="xml" />
            <batchtest todir="${reports.dir}/test/xml">
                <fileset dir="${src.test.dir}">
                    <include name="**/*Test.java" />
                	<exclude name="**/Abstract*.java" />
                </fileset>
            </batchtest>
        </junit>

        <cobertura-report format="html" destdir="${reports.dir}/coverage" srcdir="${src.main.dir}"/>
        <cobertura-report format="xml" destdir="${reports.dir}" srcdir="${src.main.dir}"/>

        <junitreport todir="${reports.dir}/test">
            <fileset dir="${reports.dir}/test/xml">
                <include name="TEST-*.xml"/>
            </fileset>
            <report todir="${reports.dir}/test" format="frames" />
        </junitreport>
    </target>

</project>
